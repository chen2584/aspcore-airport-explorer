@page
@model IndexModel

<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>Airport Explorer</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.47.0/mapbox-gl.css' rel='stylesheet' />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" />
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100%; }
    </style>
</head>
<body>

    <div id='map'></div>
    <div id="info-card" class="absolute pin-t pin-l mt-4 ml-4 rounded shadow-lg bg-white" style="max-width: 400px; display: none;">
        <div>
            <span class="absolute pin-t pin-r px-4 py-3">
                <i id="info-card-close-button" class="fa fa-times" role="button" aria-hidden="true"></i>
            </span>
            <img class="" src="http://via.placeholder.com/400x200?text=No+Picture+Found"/>
        </div>
        <div class="px-6 py-4">
            <div id="airport-name" class="font-bold text-l">Airport Name goes here</div>
        </div>
    </div>
    <script src='https://api.mapbox.com/mapbox-gl-js/v0.47.0/mapbox-gl.js'></script>
    <script>
        mapboxgl.accessToken = '@Model.MapboxAccessToken';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v9'
        });

        var nav = new mapboxgl.NavigationControl();
        map.addControl(nav, 'bottom-right');

        map.on('load',() => {
            map.addSource("airports",
            {
                type: "geojson",
                data: "?handler=airports",
                cluster: true, // Enable clustering
                clusterRadius: 50, // Radius of each cluster when clustering points
                clusterMaxZoom: 6 // Max zoom to cluster points on
            });

            map.addLayer({
                id: 'airport',
                type: 'circle',
                source: 'airports',
                filter: ['!has', 'point_count'],
                paint: {
                    'circle-color': '#1EF008',
                    'circle-radius': 6,
                    'circle-stroke-width': 1,
                    'circle-stroke-color': '#fff'
                }
            });

            map.addLayer({
                id: 'clusters',
                type: 'circle',
                source: 'airports',
                filter: ['has', 'point_count'],
                paint: {
                    'circle-color': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, '#41A337'],
                            [100, '#2D7026'],
                            [750, '#0B5703'],
                        ]
                    },
                    'circle-radius': {
                        property: 'point_count',
                        type: 'interval',
                        stops: [
                            [0, 20],
                            [100, 30],
                            [750, 40]
                        ]
                    }
                }
            });

            map.addLayer({
                id: 'cluster-count',
                type: 'symbol',
                source: 'airports',
                filter: ['has', 'point_count'],
                layout: {
                    'text-field': '{point_count}',
                    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],
                    'text-size': 12
                }
            });

            var popup = new mapboxgl.Popup({
                closeButton: false,
                closeOnClick: true
            });

            map.on('mouseenter', 'airport', function(e) {
                // Change the cursor style as a UI indicator.
                map.getCanvas().style.cursor = 'pointer';

                // Populate the popup and set its coordinates
                // based on the feature found.
                popup.setLngLat(e.features[0].geometry.coordinates)
                    .setHTML(e.features[0].properties.name)
                    .addTo(map);
            });

            map.on('mouseleave', 'airport', function() {
                map.getCanvas().style.cursor = '';
                popup.remove();
            });

            map.on('click', 'airport', e => {
                var name = e.features[0].properties.name;
                var iataCode = e.features[0].properties.iataCode;

                // Display airport info
                document.querySelector('#airport-name').innerText = name + " (" + iataCode + ")";

                // Ensure the info box is visible
                document.querySelector('#info-card').style.display = '';
            });
        });

        document.querySelector('#info-card-close-button').addEventListener('click', function(event) {
            document.querySelector('#info-card').style.display = 'none';
        });
    </script>
</body>
</html>